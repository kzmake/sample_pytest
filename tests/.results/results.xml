<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="6" name="pytest" skips="0" tests="13" time="5.342"><testcase classname="tests.test_a.TestA" file="tests/test_a.py" line="31" name="test_1" time="0.001600027084350586"></testcase><testcase classname="tests.test_a.TestA" file="tests/test_a.py" line="36" name="test_2" time="0.0017702579498291016"></testcase><testcase classname="tests.test_a.TestA" file="tests/test_a.py" line="41" name="test_3" time="0.0021593570709228516"></testcase><testcase classname="tests.test_a.TestA.test_4" file="tests/test_a.py" line="44" name="[0]" time="0.008421897888183594"></testcase><testcase classname="tests.test_a.TestA.test_4" file="tests/test_a.py" line="44" name="[1]" time="0.00587010383605957"></testcase><testcase classname="tests.test_a.TestA.test_4" file="tests/test_a.py" line="44" name="[2]" time="0.0023903846740722656"></testcase><testcase classname="tests.test_b.TestB" file="tests/test_b.py" line="32" name="test_1" time="0.007345914840698242"><failure message="assert 1 == 2">self = &lt;test_b.TestB object at 0x1101916a0&gt;

    def test_1(self):
        a = 1
        b = 2
&gt;       assert a == b
E       assert 1 == 2

a          = 1
b          = 2
self       = &lt;test_b.TestB object at 0x1101916a0&gt;

test_b.py:36: AssertionError</failure></testcase><testcase classname="tests.test_b.TestB" file="tests/test_b.py" line="37" name="test_2" time="0.0016658306121826172"><failure message="assert (1 + 2) == 4">self = &lt;test_b.TestB object at 0x11018bb00&gt;, scope_function = 4

    def test_2(self, scope_function):
        a = 1
        b = 2
&gt;       assert a + b == scope_function
E       assert (1 + 2) == 4

a          = 1
b          = 2
scope_function = 4
self       = &lt;test_b.TestB object at 0x11018bb00&gt;

test_b.py:41: AssertionError</failure></testcase><testcase classname="tests.test_b.TestB" file="tests/test_b.py" line="42" name="test_3" time="0.0018961429595947266"><failure message="assert (1 + 2) == (3 + 1)">self = &lt;test_b.TestB object at 0x110185eb8&gt;, fixture_a = 1, fixture_b = 2
fixture_ab = 3

    def test_3(self, fixture_a, fixture_b, fixture_ab):
&gt;       assert fixture_a + fixture_b == fixture_ab + 1
E       assert (1 + 2) == (3 + 1)

fixture_a  = 1
fixture_ab = 3
fixture_b  = 2
self       = &lt;test_b.TestB object at 0x110185eb8&gt;

test_b.py:44: AssertionError</failure></testcase><testcase classname="tests.test_b.TestB" file="tests/test_b.py" line="45" name="test_4" time="5.00319504737854"><failure message="Failed: Timeout &gt;5.0s">self = &lt;test_b.TestB object at 0x11018b208&gt;

    def test_4(self):
&gt;       time.sleep(10)
E       Failed: Timeout &gt;5.0s

self       = &lt;test_b.TestB object at 0x11018b208&gt;

test_b.py:47: Failed</failure></testcase><testcase classname="tests.test_b.TestB.test_5" file="tests/test_b.py" line="49" name="[0]" time="0.0009806156158447266"><failure message="assert (2 + 3) == 4">self = &lt;test_b.TestB object at 0x1100bc5f8&gt;, a = 2, b = 3, ans = 4

    @parameterized([
        (2, 3, 4),
        (1, 1, 3),
        (3, -1, 2),
    ])
    def test_5(self, a, b, ans):
&gt;       assert a + b == ans
E       assert (2 + 3) == 4

a          = 2
ans        = 4
b          = 3
self       = &lt;test_b.TestB object at 0x1100bc5f8&gt;

test_b.py:56: AssertionError</failure></testcase><testcase classname="tests.test_b.TestB.test_5" file="tests/test_b.py" line="49" name="[1]" time="0.002683877944946289"><failure message="assert (1 + 1) == 3">self = &lt;test_b.TestB object at 0x1100bc5f8&gt;, a = 1, b = 1, ans = 3

    @parameterized([
        (2, 3, 4),
        (1, 1, 3),
        (3, -1, 2),
    ])
    def test_5(self, a, b, ans):
&gt;       assert a + b == ans
E       assert (1 + 1) == 3

a          = 1
ans        = 3
b          = 1
self       = &lt;test_b.TestB object at 0x1100bc5f8&gt;

test_b.py:56: AssertionError</failure></testcase><testcase classname="tests.test_b.TestB.test_5" file="tests/test_b.py" line="49" name="[2]" time="0.005449056625366211"></testcase></testsuite>